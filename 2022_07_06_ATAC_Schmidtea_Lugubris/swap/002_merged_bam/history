#merge samtools 1.11 Using htslib 1.11-4
samtools merge SL_1.bam ../../lib/L109310_merged_csm_no_dup_mapped_q20.bam ../../lib/L109311_merged_csm_no_dup_mapped_q20.bam ../../lib/L109312_merged_csm_no_dup_mapped_q20.bam
samtools merge SL_2.bam ../../lib/L109313_merged_csm_no_dup_mapped_q20.bam ../../lib/L109314_merged_csm_no_dup_mapped_q20.bam ../../lib/L109315_merged_csm_no_dup_mapped_q20.bam
samtools merge SL_3.bam ../../lib/L109316_merged_csm_no_dup_mapped_q20.bam ../../lib/L109317_merged_csm_no_dup_mapped_q20.bam ../../lib/L109318_merged_csm_no_dup_mapped_q20.bam
samtools merge SLX_1.bam ../../lib/L109319_merged_csm_no_dup_mapped_q20.bam ../../lib/L109320_merged_csm_no_dup_mapped_q20.bam ../../lib/L109321_merged_csm_no_dup_mapped_q20.bam
samtools merge SLX_2.bam ../../lib/L109322_merged_csm_no_dup_mapped_q20.bam ../../lib/L109323_merged_csm_no_dup_mapped_q20.bam ../../lib/L109324_merged_csm_no_dup_mapped_q20.bam
samtools merge SLX_3.bam ../../lib/L109325_merged_csm_no_dup_mapped_q20.bam ../../lib/L109326_merged_csm_no_dup_mapped_q20.bam ../../lib/L109327_merged_csm_no_dup_mapped_q20.bam
samtools merge SLH_1.bam ../../lib/L109328_merged_csm_no_dup_mapped_q20.bam ../../lib/L109329_merged_csm_no_dup_mapped_q20.bam ../../lib/L109330_merged_csm_no_dup_mapped_q20.bam
samtools merge SLH_2.bam ../../lib/L109331_merged_csm_no_dup_mapped_q20.bam ../../lib/L109332_merged_csm_no_dup_mapped_q20.bam ../../lib/L109333_merged_csm_no_dup_mapped_q20.bam
samtools merge SLH_3.bam ../../lib/L109334_merged_csm_no_dup_mapped_q20.bam ../../lib/L109335_merged_csm_no_dup_mapped_q20.bam ../../lib/L109336_merged_csm_no_dup_mapped_q20.bam
samtools merge SLT_1.bam ../../lib/L109337_merged_csm_no_dup_mapped_q20.bam ../../lib/L109338_merged_csm_no_dup_mapped_q20.bam ../../lib/L109339_merged_csm_no_dup_mapped_q20.bam
samtools merge SLT_2.bam ../../lib/L109340_merged_csm_no_dup_mapped_q20.bam ../../lib/L109341_merged_csm_no_dup_mapped_q20.bam ../../lib/L109342_merged_csm_no_dup_mapped_q20.bam
samtools merge SLT_3.bam ../../lib/L109343_merged_csm_no_dup_mapped_q20.bam ../../lib/L109344_merged_csm_no_dup_mapped_q20.bam ../../lib/L109345_merged_csm_no_dup_mapped_q20.bam

#sort and index
for i in *bam; do samtools sort -@40 -o ${i%.bam}_sorted.bam $i;done
for i in *_sorted.bam; do samtools index $i;done

#create stats file
touch stats
for i in {1..9};do printf "#placeholder$i\n" >> stats; done

#stats
for i in *_sorted.bam; do printf "\n $i \n" >> stats; samtools flagstat $i >>stats; done

#extract readcounts
awk '{line[NR] = $0} /bam/ {matched[NR]} END {for (nr in matched) for (n=nr; n<=nr+9; n+=9) print line[n]}' stats | awk '{printf "%s%s",$0,(NR%2?FS:RS)}' | sed 's/  /,/' | sed "s/ //g" |  sed 's/+.*$//' > readcounts.csv

#lowest readcount
awk -F "," 'NR == 1 || $2 < min {line = $0; min = $2}END{print line}' readcounts_wt_xray.csv

awk -F "," 'NR == 1 || $2 < min {line = $0; min = $2}END{print line}' readcounts_head_tail.csv

#subsample to the lowest readcount 
#calculate factor for downsampling
awk -F ","  '$0=$0","(167372938/$2)' readcounts_wt_xray.csv
awk -F ","  '$0=$0","(157104934/$2)' readcounts_head_tail.csv

#see 003_subsampled_bam

declare -A associative
associative=([SL_1_sorted.bam]=wt1_ATAC \
[SL_2_sorted.bam]=wt2_ATAC \
[SL_3_sorted.bam]=wt3_ATAC \
[SLX_1_sorted.bam]=xray1_ATAC \
[SLX_2_sorted.bam]=xray2_ATAC \
[SLX_3_sorted.bam]=xray3_ATAC )

#create fragmentsize graph (R version 4.1.0, bioconductor-atacseqqc 1.16.0)
for i in ${!associative[@]}; do printf "library(ATACseqQC) \nbamfile <-\"$i\" \nbamfile.labels <- gsub(\"$i\", \"${associative[$i]}\", basename(bamfile)) \nfragSize <- fragSizeDist(bamfile, bamfile.labels)\n\n" > ${associative[$i]}.r && Rscript ${associative[$i]}.r && mv Rplots.pdf ${associative[$i]}_fragSizeDist.pdf; done

#remove R scripts
rm *.r

